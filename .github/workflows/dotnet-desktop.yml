name: Cross-Platform Build and Release
permissions:
  contents: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [ linux-x64, win-x64, osx-x64, osx-arm64 ]
        include:
          - net_version: "net9.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Create release directories
        run: mkdir -p bin/${{ matrix.platform }}

      - name: Publish ThirtyDollarConverter.GUI
        run: |
          dotnet publish ./ThirtyDollarConverter.GUI/ThirtyDollarConverter.GUI.csproj \
            -c Release \
            -f ${{ matrix.net_version }} \
            -r ${{ matrix.platform }} \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -o ./bin/${{ matrix.platform }}

      - name: Publish ThirtyDollarVisualizer
        run: |
          dotnet publish ./ThirtyDollarVisualizer/ThirtyDollarVisualizer.csproj \
            -c Release \
            -f ${{ matrix.net_version }} \
            -r ${{ matrix.platform }} \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -o ./bin/${{ matrix.platform }}

      - name: Clean up build artifacts
        run: |
          cd "./bin/${{ matrix.platform }}"
          rm -rf ./*.dll ./*.dylib ./*.so ./*.pdb ./runtimes

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-release
          path: bin/${{ matrix.platform }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          # leaving out `name:` downloads every artifact from the build job
          path: artifacts

      - name: Create GitHub Prerelease
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ github.run_number }}
          prerelease: true
          body: |
            # ðŸš€ Automated Crossâ€‘Platform Prerelease
            ${{ github.event.head_commit.message }}
            ----
            Run: ${{ github.run_id }}  
            Commit SHA: ${{ github.sha }}  
          files: |
            artifacts/**/*